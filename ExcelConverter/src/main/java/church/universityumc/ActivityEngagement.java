package church.universityumc;

import java.util.Calendar;
import java.util.Date;

/**
 * An activity a {@link ChurchMember} may engage in.
 *
 */
public class ActivityEngagement
{
   private ActivityType activityType;
   private Activity activity;
   private ActivityRole role;
   private Date startDate, endDate;
   private boolean hasRotationDate;
   
   /**
    * This constructor is intended to build an {@link ActivityEngagement} from fields read directly from the
    * report generated by ACS.  Since the ACS schema is a little wacky, this constructor will have to do some
    * wacky things.  In short, the parameters of this constructor (a) do not correspond 1-to-1 with the data
    * members of this object, and (2) may not be entirely accurate.
    * 
    * @param anActivityType - May include some notion of a start date
    * @param anActivityName
    * @param anActivityRole - The {@link ChurchMember}'s role in the activity
    * @param aStartDate - May be null, in which case an effort will be made to obtain it from anActivityType.
    * @param anEndDate - May be null, or possibly only year or month & year are accurate.
    * @param aHasRotationDateFlag - If false, then the activity explicitly no end date (as opposed to data
    *       simply being missing or unparseable).
    */
   public ActivityEngagement( String anActivityType, 
         String anActivityName, 
         String anActivityRole, 
         Date aStartDate,
         Date anEndDate, 
         boolean aHasRotationDateFlag)
   {
      activityType = ActivityType.find( anActivityType);
      activity = Activity.find( anActivityName);
      role = ActivityRole.find( anActivityRole);
      if (aStartDate == null)
      {
         if (activityType.getStartYear() == null)
            startDate = null;
         else
         {
            Calendar cal = Calendar.getInstance();
            cal.clear();
            cal.set( Calendar.YEAR, activityType.getStartYear());
            if (activityType.getStartMonth() != null)
               cal.set( Calendar.MONTH, activityType.getStartMonth());
            startDate = cal.getTime();
         }
      }
      else
         startDate = aStartDate;
      if (anEndDate != null && activityType.getStartMonth() != null)
      {
         // Adjust end date to correspond to last day of previous month in end year.
         Calendar cal = Calendar.getInstance();
         cal.setTime( anEndDate);
         cal.set( Calendar.MONTH, activityType.getStartMonth());
         cal.roll( Calendar.MONTH, false);
         cal.set( Calendar.DAY_OF_MONTH, cal.getActualMaximum( Calendar.DAY_OF_MONTH));
         endDate = cal.getTime();
      }
      else
         endDate = anEndDate; // May be null, but if so, there's nothing we can do about it.
      hasRotationDate = aHasRotationDateFlag; 
   }
}
